

% -----------------------------------RF1 ---------------------------------------------------------
% =============================================================================
% criar_estufa/9
% =============================================================================
% Input:
%   - Id: identificador único da estufa (atom)
%   - Nome: nome da estufa (string)
%   - Local: localização geográfica da estufa (string)
%   - Frutas: lista de frutas cultivadas (list of atoms)
%   - Li: limite inferior de conforto térmico (number)
%   - Ls: limite superior de conforto térmico (number)
%   - Lai: limite absoluto inferior (abaixo do qual é "freezing") (number)
%   - Las: limite absoluto superior (acima do qual é "burning") (number)
%
% Output:
%   - Cria uma frame no sistema com os atributos fornecidos.
%
% Funcionamento:
%   Este predicado cria uma nova estufa no sistema Golog.
%   A estufa é representada por uma frame com os seguintes atributos:
%   - nome, localizacao, tipos_fruta
%   - parâmetros térmicos: li, ls, lai, las
%   Usa os predicados `new_frame/1` e `new_slot/3` da engine Golog.
%
% Como usar:
%   ?- criar_estufa(estufa1, 'Estufa Norte', 'Lisboa', [morango, tomate], 15, 30, 10, 40).
% =============================================================================
criar_estufa(Id, Nome, Local, Frutas, Li, Ls, Lai, Las) :-
    new_frame(Id),
    new_slot(Id, nome, Nome),
    new_slot(Id, localizacao, Local),
    new_slot(Id, tipos_fruta, Frutas),
    new_slot(Id, li, Li),
    new_slot(Id, ls, Ls),
    new_slot(Id, lai, Lai),
    new_slot(Id, las, Las).





% =============================================================================
% mostrar_estufa/1
% =============================================================================
% Input:
%   - Id: identificador da estufa (atom)
%
% Output:
%   - Mostra no terminal todos os slots e valores associados à estufa indicada.
%
% Funcionamento:
%   Este predicado usa o predicado Golog `show_frame/1` para apresentar
%   o conteúdo da frame da estufa, incluindo os seus atributos e valores
%   (nome, localização, tipos de fruta, parâmetros ambientais, etc.).
%
% Como usar:
%   ?- mostrar_estufa(estufa1).
% =============================================================================
mostrar_estufa(Id) :-
    show_frame(Id).




% =============================================================================
% alterar_estufa/8
% =============================================================================
% Input:
%   - Id: identificador da estufa             (atom)
%   - Nome: novo nome da estufa               (string)
%   - Local: nova localização                 (string)
%   - Frutas: nova lista de frutas cultivadas (list)
%   - Li: novo limite inferior                (number)
%   - Ls: novo limite superior                (number)
%   - Lai: novo limite absoluto inferior      (number)
%   - Las: novo limite absoluto superior      (number)
%
% Output:
%   - Atualiza todos os slots da estufa com os novos valores fornecidos.
%
% Funcionamento:
%   Substitui os valores
%   de todos os slots principais de uma estufa. Os slots têm de existir.
%
% Como usar:
%   ?- alterar_estufa(estufa1, 'Estufa Sul', 'Faro', [banana, manga], 17, 28, 12, 38).
% =============================================================================

alterar_estufa(Id, Nome, Local, Frutas, Li, Ls, Lai, Las) :-
    new_value(Id, nome, Nome),
    new_value(Id, localizacao, Local),
    new_value(Id, tipos_fruta, Frutas),
    new_value(Id, li, Li),
    new_value(Id, ls, Ls),
    new_value(Id, lai, Lai),
    new_value(Id, las, Las).



% =============================================================================
% apagar_estufa/1
% =============================================================================
% Input:
%   - Id: identificador da estufa a apagar (atom)
%
% Output:
%   - Remove a frame da estufa e todos os seus atributos da base de conhecimento.
%
% Funcionamento:
%   Este predicado elimina uma estufa existente do sistema, usando o predicado
%   `delete_frame/1` da biblioteca GOLOG. Após a execução, a estufa deixa de existir
%   e não pode mais ser consultada com `show_frame/1` ou `get_value/3`.
%
% Como usar:
%   ?- apagar_estufa(estufa1).
% =============================================================================
apagar_estufa(Id) :-
    delete_frame(Id).













% -----------------------------------RF2 ---------------------------------------------------------

% =============================================================================
% criar_fruta/8
% =============================================================================
% Input:
%   - Id        : identificador único do lote de fruta                   (atom)
%   - Nome      : nome da fruta (ex: 'Morango')                          (string)
%   - Ref       : referência/código interno da fruta                     (atom)
%   - Semeio    : data de semeio                                         (string)
%   - Colheita  : data de colheita                                       (string)
%   - Validade  : data de validade                                       (string)
%   - Preco     : preço por unidade                                      (number)
%   - EstufaId  : identificador da estufa a que este lote pertence       (atom)
%
% Output:
%   - Cria uma frame representando um lote de fruta com stock inicial 0.
%
% Funcionamento:
%   Cria um registo de lote de fruta (não a fruta individual), associando-o
%   a uma estufa concreta e inicializando o stock (quantidade) a 0 unidades.
%
% Como usar:
%   ?- criar_fruta(fruta1, 'Morango', ref001, '2025-03-01', '2025-04-10',
%                  '2025-04-20', 1.20, estufa1).
% =============================================================================

criar_fruta(Id, Nome, Ref, Semeio, Colheita, Validade, Preco, EstufaId) :-
    new_frame(Id),
    new_slot(Id, nome, Nome),
    new_slot(Id, referencia, Ref),
    new_slot(Id, data_semeio, Semeio),
    new_slot(Id, data_colheita, Colheita),
    new_slot(Id, validade, Validade),
    new_slot(Id, preco, Preco),
    new_slot(Id, quantidade, 0),
    new_slot(Id, estufaId, EstufaId).






% =============================================================================
% mostrar_fruta/1
% =============================================================================
% Input:
%   - Id : identificador do lote de fruta a visualizar                    (atom)
%
% Output:
%   - Mostra no terminal todos os slots e valores do lote de fruta.
%
% Funcionamento:
%   Usa o predicado `show_frame/1` da engine Golog para apresentar
%   todos os atributos associados a esse lote de fruta, incluindo:
%   nome, referência, datas, preço, quantidade e estufa associada.
%
% Como usar:
%   ?- mostrar_fruta(fruta1).
% =============================================================================
mostrar_fruta(Id) :-
    show_frame(Id).




% =============================================================================
% alterar_fruta/8
% =============================================================================
% Input:
%   - Id        : identificador do lote de fruta                         (atom)
%   - Nome      : novo nome da fruta                                     (string)
%   - Ref       : nova referência/código interno                         (atom)
%   - Semeio    : nova data de semeio                                    (string)
%   - Colheita  : nova data de colheita                                  (string)
%   - Validade  : nova data de validade                                  (string)
%   - Preco     : novo preço por unidade                                 (number)
%   - EstufaId  : nova estufa associada                                  (atom)
%
% Output:
%   - Atualiza todos os atributos do lote de fruta.
%
% Funcionamento:
%   Usa `new_value/3` da engine Golog para atualizar todos os campos de
%   um lote de fruta existente no sistema, mantendo o mesmo Id.
%
% Como usar:
%   ?- alterar_fruta(fruta1, 'Morango', ref002, '2025-03-10',
%                    '2025-04-15', '2025-04-25', 1.40, estufa2).
% =============================================================================
alterar_fruta(Id, Nome, Ref, Semeio, Colheita, Validade, Preco, EstufaId) :-
    new_value(Id, nome, Nome),
    new_value(Id, referencia, Ref),
    new_value(Id, data_semeio, Semeio),
    new_value(Id, data_colheita, Colheita),
    new_value(Id, validade, Validade),
    new_value(Id, preco, Preco),
    new_value(Id, estufaId, EstufaId).



% =============================================================================
% apagar_fruta/1
% =============================================================================
% Input:
%   - Id : identificador do lote de fruta a remover                      (atom)
%
% Output:
%   - Elimina o lote de fruta e todos os seus atributos da base de conhecimento.
%
% Funcionamento:
%   Usa o predicado `delete_frame/1` da engine Golog para remover
%   completamente o registo de fruta com esse Id. Após a remoção, a fruta
%   deixa de poder ser consultada ou encomendada.
%
% Como usar:
%   ?- apagar_fruta(fruta1).
% =============================================================================
apagar_fruta(Id) :-
    delete_frame(Id).
